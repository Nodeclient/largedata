class LargeData{constructor(e){this.speed=parseInt(e.speed)||1024,this.eid=e.form_id||"form",this.posturi=e.post_url||"/api/upload"}fields(call){if(null!=document.getElementById(this.eid)){let Fields=[];for(let name of document.getElementById(this.eid).getElementsByTagName("input")){let item=name.getAttribute("id")||name.getAttribute("name");if(item){var attribute=[];for(const attr of name.attributes)if(attr.value)try{var result=eval("({"+String(attr.name).replace("data-","")+':"'+attr.value+'"})');attribute.push(result)}catch(e){return call({code:"1500",msg:"TYPE_ERROR"},{error:"Invalid Syntax -> "+String(attr.name)}),!1}attribute.length>0&&Fields.push({attribute:attribute,id:item,value:name.value}),attribute=[]}}_f(Fields,this.posturi).then(e=>{if(!e.ok)throw new Error(e.statusText);e.body.getReader().read().then(({done:e,value:t})=>{call({code:"0005",msg:"SUCCESS",response:isJson(t)})})}).catch(e=>{call({code:"1600",msg:"NETWORK_ERROR"},{error:String(e)})})}else call({code:"1100",msg:"ID_ERROR"},{error:"Invalid form id ("+this.eid+")",status:0})}upload(e){if(null!=document.getElementById(this.eid)){var t=document.getElementById(this.eid).getElementsByTagName("input"),r=null;for(var s of t)"file"==s.getAttribute("type")&&(r=s.files);if(null!=r){var i={i:0,form_id:this.eid,speed:this.speed,post_url:this.posturi},a=t=>{if(i.i<=t-1)return i.i++,e({code:"0001",msg:"UPLOAD_STARTING"},{}),new LargeData(i).FileSystem(i.i-1,r,i,o);if(i.i>0||t>0){let t=[];for(var s of r)t.push({name:s.name,size:_bs(s.size).size,mime:s.type});e({code:"0003",msg:"FINISHED",list:t},{})}else e({code:"1300",msg:"FILE_ERROR"},{},{error:"File not selected",status:-1})};function o(t,s,i){i?e({code:"1800",msg:"UPLOAD_ERROR"},{},{error:i.error,status:0}):"0002"==t.code?(e(t,s,i),a(r.length)):e(t,s,i)}a(r.length)}else e({code:"1110",msg:"INPUT_ERROR"},{},{error:"Invalid input file element.",status:0})}else e({code:"1100",msg:"ID_ERROR"},{},{error:"Invalid form id ("+this.eid+")",status:0})}FileSystem(e,t,r,s){var i=t[e],a={ups:r.speed,offset:0,bytes:0,uri:r.post_url};if(i){var o=new FileReader,n=i.size,d=i.name;o.onerror=function(e){s({code:"1300",msg:"FILE_ERROR"},{},{error:"Can't read from the source file.",status:0}),o.abort()},o.onloadend=function(e){if(e.target.readyState==FileReader.DONE){const r=new Int8Array(e.target.result);if(a.bytes+=r.length,r.length>0&&_s({name:d,size:n,chunk:Object.values(r||[])},a.uri).then(e=>{if(!e.ok)throw new Error(e.statusText);t()}).catch(e=>{s({code:"1600",msg:"NETWORK_ERROR"},{},{error:String(e)})}),a.offset<=n){var t=()=>{a.offset+=a.ups;var e=i.slice(a.offset,a.offset+a.ups);o.readAsArrayBuffer(e)};s({code:"0004",msg:"UPLOADING",name:d,percent:(a.bytes/n*100).toFixed(0)},_ns(n,a.ups,10))}else s({code:"0002",msg:"UPLOAD_DONE",name:d,size:_bs(n)},{})}}}else s({code:"1120",msg:"INPUT_ERROR"},{},{error:"File not selected",status:-1});var l=i.slice(a.offset,a.offset+a.ups);o.readAsArrayBuffer(l)}}var _s=async function(e,t){return await fetch(t,{cache:"no-store",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({data:e})})},_f=async function(e,t){return await fetch(t,{cache:"no-store",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({field:e||[]})})},_ns=function(e,t,r){var s=parseFloat(e/1024*8/t/60),i=parseInt(s/100)*parseInt(r),a=parseInt(s)+parseInt(i),o=Math.floor(a/60),n=60*(a/60-o),d=Math.round(n),l={speed:0,prefix:"Kbps",type:"Dialed-up"};return t>=1e6?(l.speed=(t/1e6).toFixed(1),l.prefix="Gbps"):t>=1e3?(l.speed=(t/1e3).toFixed(1),l.prefix="Mbps"):t>=1&&(l.speed=t.toFixed(0),l.prefix="Kbps"),t>=2e5?l.type="5G":t>=5e4?l.type="Fiber":t>=1e3?l.type="ADSL,LAN,3G,4G":t>=80&&(l.type="Modem"),{network:l,time:{hour:String(o),minute:d<1?"1>":d}}},_bs=function(e){let t=e/Math.pow(1024,0),r=e/Math.pow(1024,1),s=e/Math.pow(1024,2),i=e/Math.pow(1024,3);return i.toFixed(1)>1?{size:i.toFixed(1).concat("GB")}:s.toFixed(1)>1?{size:s.toFixed(1).concat("MB")}:r.toFixed(1)>1?{size:r.toFixed(1).concat("KB")}:t.toFixed(1)>1?{size:t.toFixed(1).concat("B")}:void 0},_u8=function(e,t){return new TextDecoder(t).decode(e)},isJson=e=>{try{return JSON.parse(_u8(e,"utf-8"))}catch(e){return""}};